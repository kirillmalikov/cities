{"ast":null,"code":"const citiesApiUrl = 'http://localhost:8080/v1/cities';\nconst errorMessage = `Network response was not OK: `;\nexport async function getAllCities(page, size) {\n  return fetchCities(page, size);\n}\nexport async function searchCities(name, page, size) {\n  return fetchCities(page, size, name);\n}\nasync function fetchCities(page, size, name) {\n  try {\n    const url = (name ? `${citiesApiUrl}/search?name=${name}&` : `${citiesApiUrl}?`) + `page=${page}&size=${size}`;\n    const response = await fetch(url, {\n      credentials: 'include'\n    });\n    if (!response.ok) {\n      throw new Error(`${errorMessage}${response.status}`);\n    }\n    const data = await response.json();\n    return data.content;\n  } catch (error) {\n    console.error('Error searching cities:', error);\n    throw error;\n  }\n}\nexport async function updateCity(id, newName, newPhoto) {\n  try {\n    const response = await fetch(`${citiesApiUrl}/${id}`, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: newName,\n        photo: newPhoto\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`${errorMessage}${response.status}`);\n    }\n  } catch (error) {\n    console.error('Error updating city:', error);\n    throw error;\n  }\n}","map":{"version":3,"names":["citiesApiUrl","errorMessage","getAllCities","page","size","fetchCities","searchCities","name","url","response","fetch","credentials","ok","Error","status","data","json","content","error","console","updateCity","id","newName","newPhoto","method","headers","body","JSON","stringify","photo"],"sources":["/app/src/api/cities-api.ts"],"sourcesContent":["const citiesApiUrl = 'http://localhost:8080/v1/cities';\r\nconst errorMessage = `Network response was not OK: `\r\n\r\nexport async function getAllCities(page: number, size: number) {\r\n    return fetchCities(page, size);\r\n}\r\n\r\nexport async function searchCities(name: string, page: number, size: number) {\r\n    return fetchCities(page, size, name);\r\n}\r\n\r\nasync function fetchCities(page: number, size: number, name?: string) {\r\n    try {\r\n        const url = (name ? `${citiesApiUrl}/search?name=${name}&` : `${citiesApiUrl}?`) + `page=${page}&size=${size}`;\r\n        const response = await fetch(url, { credentials: 'include' });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`${errorMessage}${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n\r\n        return data.content;\r\n    } catch (error) {\r\n        console.error('Error searching cities:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function updateCity(id: number, newName: string, newPhoto: string) {\r\n    try {\r\n        const response = await fetch(`${citiesApiUrl}/${id}`, {\r\n            method: 'PUT',\r\n            credentials: 'include',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({name: newName, photo: newPhoto}),\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(`${errorMessage}${response.status}`);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error updating city:', error);\r\n        throw error;\r\n    }\r\n}\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,iCAAiC;AACtD,MAAMC,YAAY,GAAI,+BAA8B;AAEpD,OAAO,eAAeC,YAAYA,CAACC,IAAY,EAAEC,IAAY,EAAE;EAC3D,OAAOC,WAAW,CAACF,IAAI,EAAEC,IAAI,CAAC;AAClC;AAEA,OAAO,eAAeE,YAAYA,CAACC,IAAY,EAAEJ,IAAY,EAAEC,IAAY,EAAE;EACzE,OAAOC,WAAW,CAACF,IAAI,EAAEC,IAAI,EAAEG,IAAI,CAAC;AACxC;AAEA,eAAeF,WAAWA,CAACF,IAAY,EAAEC,IAAY,EAAEG,IAAa,EAAE;EAClE,IAAI;IACA,MAAMC,GAAG,GAAG,CAACD,IAAI,GAAI,GAAEP,YAAa,gBAAeO,IAAK,GAAE,GAAI,GAAEP,YAAa,GAAE,IAAK,QAAOG,IAAK,SAAQC,IAAK,EAAC;IAC9G,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;MAAEG,WAAW,EAAE;IAAU,CAAC,CAAC;IAE7D,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAE,GAAEZ,YAAa,GAAEQ,QAAQ,CAACK,MAAO,EAAC,CAAC;IACxD;IACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,OAAOD,IAAI,CAACE,OAAO;EACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACf;AACJ;AAEA,OAAO,eAAeE,UAAUA,CAACC,EAAU,EAAEC,OAAe,EAAEC,QAAgB,EAAE;EAC5E,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,YAAa,IAAGqB,EAAG,EAAC,EAAE;MAClDG,MAAM,EAAE,KAAK;MACbb,WAAW,EAAE,SAAS;MACtBc,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACrB,IAAI,EAAEe,OAAO;QAAEO,KAAK,EAAEN;MAAQ,CAAC;IACzD,CAAC,CAAC;IACF,IAAI,CAACd,QAAQ,CAACG,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAE,GAAEZ,YAAa,GAAEQ,QAAQ,CAACK,MAAO,EAAC,CAAC;IACxD;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
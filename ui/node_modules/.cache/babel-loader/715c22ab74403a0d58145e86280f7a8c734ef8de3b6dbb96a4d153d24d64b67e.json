{"ast":null,"code":"var _jsxFileName = \"/app/src/components/SearchContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Create a new file SearchContext.tsx\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchContext = /*#__PURE__*/createContext(undefined);\nexport const useSearchContext = () => {\n  _s();\n  const context = useContext(SearchContext);\n  if (!context) {\n    throw new Error('useSearchContext must be used within a SearchProvider');\n  }\n  return context;\n};\n_s(useSearchContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SearchProvider = ({\n  children\n}) => {\n  _s2();\n  const [searchQuery, setSearchQuery] = useState('');\n  return /*#__PURE__*/_jsxDEV(SearchContext.Provider, {\n    value: {\n      searchQuery,\n      setSearchQuery\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s2(SearchProvider, \"uixqA8hxOTN7LqZPWxVzG2fnyhQ=\");\n_c = SearchProvider;\nvar _c;\n$RefreshReg$(_c, \"SearchProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","SearchContext","undefined","useSearchContext","_s","context","Error","SearchProvider","children","_s2","searchQuery","setSearchQuery","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/components/SearchContext.tsx"],"sourcesContent":["// Create a new file SearchContext.tsx\r\nimport React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\ninterface SearchContextProps {\r\n    searchQuery: string;\r\n    setSearchQuery: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst SearchContext = createContext<SearchContextProps | undefined>(undefined);\r\n\r\nexport const useSearchContext = () => {\r\n    const context = useContext(SearchContext);\r\n    if (!context) {\r\n        throw new Error('useSearchContext must be used within a SearchProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\ninterface SearchProviderProps {\r\n    children: ReactNode; // Define children as a ReactNode\r\n}\r\n\r\nexport const SearchProvider: React.FC<SearchProviderProps> = ({ children }) => {\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    return (\r\n        <SearchContext.Provider value={{ searchQuery, setSearchQuery }}>\r\n            {children}\r\n        </SearchContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9E,MAAMC,aAAa,gBAAGL,aAAa,CAAiCM,SAAS,CAAC;AAE9E,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,OAAO,GAAGR,UAAU,CAACI,aAAa,CAAC;EACzC,IAAI,CAACI,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,uDAAuD,CAAC;EAC5E;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,EAAA,CANWD,gBAAgB;AAY7B,OAAO,MAAMI,cAA6C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC3E,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElD,oBACIE,OAAA,CAACC,aAAa,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEH,WAAW;MAAEC;IAAe,CAAE;IAAAH,QAAA,EAC1DA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEjC,CAAC;AAACR,GAAA,CARWF,cAA6C;AAAAW,EAAA,GAA7CX,cAA6C;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
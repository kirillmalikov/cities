{"ast":null,"code":"var _jsxFileName = \"/app/src/components/PageSizeSelector.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageSizeSelector = ({\n  pageSize,\n  onPageChange\n}) => {\n  const options = [10, 20, 50, 100, 200];\n  const handlePageSizeChange = event => {\n    const newSize = parseInt(event.target.value, 10);\n    onPageChange(newSize);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-size-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"pageSize\",\n      children: \"Page Size: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"pageSize\",\n      value: pageSize,\n      onChange: handlePageSizeChange,\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = PageSizeSelector;\nexport default PageSizeSelector;\nvar _c;\n$RefreshReg$(_c, \"PageSizeSelector\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PageSizeSelector","pageSize","onPageChange","options","handlePageSizeChange","event","newSize","parseInt","target","value","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","option","_c","$RefreshReg$"],"sources":["/app/src/components/PageSizeSelector.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface PageSizeSelectorProps {\r\n    pageSize: number;\r\n    onPageChange: (pageSize: number) => void;\r\n}\r\n\r\nconst PageSizeSelector: React.FC<PageSizeSelectorProps> = ({ pageSize, onPageChange }) => {\r\n    const options = [10, 20, 50, 100, 200];\r\n\r\n    const handlePageSizeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const newSize = parseInt(event.target.value, 10);\r\n        onPageChange(newSize);\r\n    };\r\n\r\n    return (\r\n        <div className=\"page-size-selector\">\r\n            <label htmlFor=\"pageSize\">Page Size: </label>\r\n            <select id=\"pageSize\" value={pageSize} onChange={handlePageSizeChange}>\r\n                {options.map((option) => (\r\n                    <option key={option} value={option}>\r\n                        {option}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageSizeSelector;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,gBAAiD,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EACtF,MAAMC,OAAO,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;EAEtC,MAAMC,oBAAoB,GAAIC,KAA2C,IAAK;IAC1E,MAAMC,OAAO,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC;IAChDP,YAAY,CAACI,OAAO,CAAC;EACzB,CAAC;EAED,oBACIP,OAAA;IAAKW,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BZ,OAAA;MAAOa,OAAO,EAAC,UAAU;MAAAD,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC7CjB,OAAA;MAAQkB,EAAE,EAAC,UAAU;MAACR,KAAK,EAAER,QAAS;MAACiB,QAAQ,EAAEd,oBAAqB;MAAAO,QAAA,EACjER,OAAO,CAACgB,GAAG,CAAEC,MAAM,iBAChBrB,OAAA;QAAqBU,KAAK,EAAEW,MAAO;QAAAT,QAAA,EAC9BS;MAAM,GADEA,MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACK,EAAA,GApBIrB,gBAAiD;AAsBvD,eAAeA,gBAAgB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}